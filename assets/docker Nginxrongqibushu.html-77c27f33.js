import{_ as s,r as i,o as d,c,e,f as n,b as r,d as o}from"./app-e09b6429.js";const l="/orangewind/images/docker/dockerNginx.png",t="/orangewind/images/docker/dockerNginx1.png",p="/orangewind/images/docker/dockerNginx3.png",u="/orangewind/images/docker/dockerNginx4.png",h={},g=e("h2",{id:"docker-nginx容器部署",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#docker-nginx容器部署","aria-hidden":"true"},"#"),n(" Docker Nginx容器部署")],-1),v=e("h3",{id:"安装-docker",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#安装-docker","aria-hidden":"true"},"#"),n(" 安装 Docker")],-1),b=e("p",null,"官方安装文档很详细，也很简单",-1),m={href:"https://link.juejin.cn/?target=https%3A%2F%2Fdocs.docker.com%2Fengine%2Finstall%2Fubuntu%2F",target:"_blank",rel:"noopener noreferrer"},x=o(`<p><a href="./docker%E5%AE%89%E8%A3%85">或参考docker安装该文章</a></p><p><code>检查docker是否安装成功</code></p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">docker</span> <span class="token parameter variable">-v</span>
Docker version <span class="token number">24.0</span>.6, build ed223bc
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="拉取nginx镜像" tabindex="-1"><a class="header-anchor" href="#拉取nginx镜像" aria-hidden="true">#</a> 拉取nginx镜像</h3><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">docker</span> pull nginx
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p><img src="`+l+`" alt=""></p><p>检查镜像是否获取成功，现在就是拉取到的最新版本的 <code>nginx</code> 镜像</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">docker</span> images

REPOSITORY   TAG       IMAGE ID       CREATED         SIZE
nginx        latest    605c77e624dd   <span class="token number">20</span> months ago   141MB
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="准备部署项目" tabindex="-1"><a class="header-anchor" href="#准备部署项目" aria-hidden="true">#</a> 准备部署项目</h3><p>准备容器中部署的项目，这里使用一个 <code>Vue3</code> 初始化项目，自行打包 <code>dist</code> 即可</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>创建vue项目
vue create vue3_docker_nginx

进入vue项目
<span class="token builtin class-name">cd</span> vue3_docker_nginx

打包vue项目
<span class="token function">npm</span> run build
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="运行nginx容器" tabindex="-1"><a class="header-anchor" href="#运行nginx容器" aria-hidden="true">#</a> 运行nginx容器</h3><p>通过之前安装的nginx镜像创建一个nginx_server的新容器</p><blockquote><p>创建nginx_server容器</p><p>docker create --name nginx_server nginx</p></blockquote><blockquote><p>启动nginx_server容器</p><p>docker start nginx_server</p></blockquote><blockquote><p>运行nginx_server容器</p><p>docker run --name nginx-server -p 80:80 -v /home/www -d <strong>nginx</strong></p></blockquote><h4 id="命令参数" tabindex="-1"><a class="header-anchor" href="#命令参数" aria-hidden="true">#</a> 命令参数</h4><ul><li><code>--name</code>: 容器名称</li><li><code>-p</code>: 将系统的80端口映射到容器的80端口</li><li><code>-v</code>: <code>/home/www</code> 系统外部的代码目录，映射到容器内自定义目录 <code>www</code></li><li><code>-d</code>: 设置容器后台运行</li></ul><h4 id="检查服务" tabindex="-1"><a class="header-anchor" href="#检查服务" aria-hidden="true">#</a> 检查服务</h4><p>检查 <code>nginx</code> 容器服务是否正常运行成功，在浏览器中容器服务的地址 <code>localhost</code>，如下效果</p><p><img src="`+t+`" alt=""></p><h3 id="运行前端项目" tabindex="-1"><a class="header-anchor" href="#运行前端项目" aria-hidden="true">#</a> 运行前端项目</h3><p>进入nginx-server容器</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">docker</span> <span class="token builtin class-name">exec</span> <span class="token parameter variable">-it</span> nginx-server /bin/bash
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h4 id="修改容器中的-nginx-conf-文件" tabindex="-1"><a class="header-anchor" href="#修改容器中的-nginx-conf-文件" aria-hidden="true">#</a> 修改容器中的 nginx.conf 文件</h4><p>使用 <code>vim</code> 修改 <code>nginx.conf</code> 文件配置，添加 <code>server</code> 配置</p><p>因为容器与外界是完全隔离的，使用vim命令请先安装vim</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">apt-get</span> update	
<span class="token function">apt-get</span> <span class="token function">install</span> <span class="token parameter variable">-y</span> <span class="token function">vim</span>  
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>然后执行如下命令</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">vim</span> /etc/nginx/nginx.conf 
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>修改后的 nginx.conf 文件如下：</p><p><img src="`+p+`" alt=""></p><p><code>server</code> 里面配置了 <code>80</code> 端口，<code>location / root</code> 地址为 <code>vue3_docker_nginx</code> 前端项目的 <code>dist</code> 目录</p><p>这时候刷新浏览器 <code>localhost</code> 地址，内容是没有变化的，因为 <code>nginx</code> 配置更新后需要重启服务</p><h4 id="重启-nginx-服务" tabindex="-1"><a class="header-anchor" href="#重启-nginx-服务" aria-hidden="true">#</a> 重启 nginx 服务</h4><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">docker</span> restart nginx-server
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>重启服务后，再次刷新浏览器，前端项目部署好了</p><p><img src="`+u+'" alt=""></p>',38);function k(_,f){const a=i("ExternalLinkIcon");return d(),c("div",null,[g,v,b,e("p",null,[e("a",m,[n("Install Docker Engine on Ubuntu"),r(a)])]),x])}const E=s(h,[["render",k],["__file","docker Nginxrongqibushu.html.vue"]]);export{E as default};
