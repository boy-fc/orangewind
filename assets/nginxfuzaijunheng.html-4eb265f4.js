import{_ as n,o as s,c as a,d as e}from"./app-e09b6429.js";const i="/orangewind/images/nginx/nginxFzjh.png",p="/orangewind/images/nginx/nginxFzjh1.png",t="/orangewind/images/nginx/nginxFzjh2.png",c="/orangewind/images/nginx/nginxFzjh3.png",r={},d=e('<h2 id="nginx负载均衡" tabindex="-1"><a class="header-anchor" href="#nginx负载均衡" aria-hidden="true">#</a> nginx负载均衡</h2><h3 id="什么是负载均衡" tabindex="-1"><a class="header-anchor" href="#什么是负载均衡" aria-hidden="true">#</a> 什么是负载均衡</h3><p><img src="'+i+`" alt=""></p><p>如上面的图，前面是众多的服务窗口，下面有很多用户需要服务，我们需要一个工具或策略来帮助我们将如此多的用户分配到每个窗口，来达到资源的充分利用以及更少的排队时间。</p><p>把前面的服务窗口想像成我们的后端服务器，而后面终端的人则是无数个客户端正在发起请求。负载均衡就是用来帮助我们将众多的客户端请求合理的分配到各个服务器，以达到服务端资源的充分利用和更少的请求时间。</p><h3 id="如何实现负载均衡" tabindex="-1"><a class="header-anchor" href="#如何实现负载均衡" aria-hidden="true">#</a> 如何实现负载均衡</h3><p>Upstream指定后端服务器地址列表</p><div class="language-nginx line-numbers-mode" data-ext="nginx"><pre class="language-nginx"><code><span class="token directive"><span class="token keyword">upstream</span> balanceServer</span> <span class="token punctuation">{</span>
    <span class="token directive"><span class="token keyword">server</span> 10.1.22.33:12345</span><span class="token punctuation">;</span>
    <span class="token directive"><span class="token keyword">server</span> 10.1.22.34:12345</span><span class="token punctuation">;</span>
    <span class="token directive"><span class="token keyword">server</span> 10.1.22.35:12345</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>在server中拦截响应请求，并将请求转发到Upstream中配置的服务器列表。</p><div class="language-nginx line-numbers-mode" data-ext="nginx"><pre class="language-nginx"><code><span class="token directive"><span class="token keyword">server</span></span> <span class="token punctuation">{</span>
    <span class="token directive"><span class="token keyword">server_name</span>  fe.server.com</span><span class="token punctuation">;</span>
    <span class="token directive"><span class="token keyword">listen</span> <span class="token number">80</span></span><span class="token punctuation">;</span>
    <span class="token directive"><span class="token keyword">location</span> /api</span> <span class="token punctuation">{</span>
        <span class="token directive"><span class="token keyword">proxy_pass</span> http://balanceServer</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>上面的配置只是指定了nginx需要转发的服务端列表，并没有指定分配策略。</p><h3 id="实现负载均衡的策略" tabindex="-1"><a class="header-anchor" href="#实现负载均衡的策略" aria-hidden="true">#</a> 实现负载均衡的策略</h3><p><img src="`+p+`" alt=""></p><h4 id="轮询策略" tabindex="-1"><a class="header-anchor" href="#轮询策略" aria-hidden="true">#</a> <strong>轮询策略</strong></h4><p>默认情况下采用的策略，将所有客户端请求轮询分配给服务端。这种策略是可以正常工作的，但是如果其中某一台服务器压力太大，出现延迟，会影响所有分配在这台服务器下的用户。</p><div class="language-nginx line-numbers-mode" data-ext="nginx"><pre class="language-nginx"><code><span class="token directive"><span class="token keyword">upstream</span> balanceServer</span> <span class="token punctuation">{</span>
    <span class="token directive"><span class="token keyword">server</span> 10.1.22.33:12345</span><span class="token punctuation">;</span>
    <span class="token directive"><span class="token keyword">server</span> 10.1.22.34:12345</span><span class="token punctuation">;</span>
    <span class="token directive"><span class="token keyword">server</span> 10.1.22.35:12345</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><img src="`+t+`" alt=""></p><h4 id="最小连接数策略" tabindex="-1"><a class="header-anchor" href="#最小连接数策略" aria-hidden="true">#</a> <strong>最小连接数策略</strong></h4><p>将请求优先分配给压力较小的服务器，它可以平衡每个队列的长度，并避免向压力大的服务器添加更多的请求。</p><div class="language-nginx line-numbers-mode" data-ext="nginx"><pre class="language-nginx"><code><span class="token directive"><span class="token keyword">upstream</span> balanceServer</span> <span class="token punctuation">{</span>
    <span class="token directive"><span class="token keyword">least_conn</span></span><span class="token punctuation">;</span>
    <span class="token directive"><span class="token keyword">server</span> 10.1.22.33:12345</span><span class="token punctuation">;</span>
    <span class="token directive"><span class="token keyword">server</span> 10.1.22.34:12345</span><span class="token punctuation">;</span>
    <span class="token directive"><span class="token keyword">server</span> 10.1.22.35:12345</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><img src="`+c+`" alt=""></p><h4 id="最快响应时间策略" tabindex="-1"><a class="header-anchor" href="#最快响应时间策略" aria-hidden="true">#</a> <strong>最快响应时间策略</strong></h4><p>依赖于NGINX Plus，优先分配给响应时间最短的服务器。</p><div class="language-nginx line-numbers-mode" data-ext="nginx"><pre class="language-nginx"><code><span class="token directive"><span class="token keyword">upstream</span> balanceServer</span> <span class="token punctuation">{</span>
    <span class="token directive"><span class="token keyword">fair</span></span><span class="token punctuation">;</span>
    <span class="token directive"><span class="token keyword">server</span> 10.1.22.33:12345</span><span class="token punctuation">;</span>
    <span class="token directive"><span class="token keyword">server</span> 10.1.22.34:12345</span><span class="token punctuation">;</span>
    <span class="token directive"><span class="token keyword">server</span> 10.1.22.35:12345</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="客户端ip绑定" tabindex="-1"><a class="header-anchor" href="#客户端ip绑定" aria-hidden="true">#</a> <strong>客户端ip绑定</strong></h4><p>来自同一个ip的请求永远只分配一台服务器，有效解决了动态网页存在的session共享问题。</p><div class="language-nginx line-numbers-mode" data-ext="nginx"><pre class="language-nginx"><code><span class="token directive"><span class="token keyword">upstream</span> balanceServer</span> <span class="token punctuation">{</span>
    <span class="token directive"><span class="token keyword">ip_hash</span></span><span class="token punctuation">;</span>
    <span class="token directive"><span class="token keyword">server</span> 10.1.22.33:12345</span><span class="token punctuation">;</span>
    <span class="token directive"><span class="token keyword">server</span> 10.1.22.34:12345</span><span class="token punctuation">;</span>
    <span class="token directive"><span class="token keyword">server</span> 10.1.22.35:12345</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,27),l=[d];function o(u,v){return s(),a("div",null,l)}const g=n(r,[["render",o],["__file","nginxfuzaijunheng.html.vue"]]);export{g as default};
