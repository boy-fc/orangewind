import{_ as i,r as o,o as a,c as s,e as n,f as e,b as r,d as c}from"./app-e09b6429.js";const g="/orangewind/images/nginx/nginx.png",h={},p=n("h2",{id:"nginx-初识",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#nginx-初识","aria-hidden":"true"},"#"),e(" nginx 初识")],-1),d=n("h3",{id:"什么是nginx",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#什么是nginx","aria-hidden":"true"},"#"),e(" 什么是Nginx")],-1),l=n("em",null,"Nginx",-1),x={href:"https://link.juejin.cn/?target=https%3A%2F%2Fbaike.baidu.com%2Fitem%2FHTTP",target:"_blank",rel:"noopener noreferrer"},_={href:"https://link.juejin.cn/?target=https%3A%2F%2Fbaike.baidu.com%2Fitem%2F%E5%8F%8D%E5%90%91%E4%BB%A3%E7%90%86%2F7793488",target:"_blank",rel:"noopener noreferrer"},u=c('<p>Nginx以事件驱动的方式编写，所以有非常好的性能，同时也是一个非常高效的反向代理、负载平衡服务器。在性能上，Nginx占用很少的系统资源，能支持更多的并发连接，达到更高的访问效率；在功能上，Nginx是优秀的代理服务器和负载均衡服务器；在安装配置上，Nginx安装简单、配置灵活。</p><p>Nginx支持热部署，启动速度特别快，还可以在不间断服务的情况下对软件版本或配置进行升级，即使运行数月也无需重新启动。</p><p>在微服务的体系之下，Nginx正在被越来越多的项目采用作为网关来使用，配合Lua做限流、熔断等控制。</p><p><img src="'+g+'" alt=""></p><h3 id="正向代理" tabindex="-1"><a class="header-anchor" href="#正向代理" aria-hidden="true">#</a> 正向代理</h3><blockquote><p><strong>正向代理</strong>，意思是一个位于客户端和原始服务器(origin server)之间的服务器，为了从原始服务器取得内容，客户端向代理发送一个请求并指定目标(原始服务器)，然后代理向原始服务器转交请求并将获得的内容返回给客户端。</p></blockquote><p><strong>正向代理</strong>是为我们服务的，即为客户端服务的，客户端可以根据正向代理访问到它本身无法访问到的服务器资源。</p><p><strong>正向代理</strong>对我们是透明的，对服务端是非透明的，即服务端并不知道自己收到的是来自代理的访问还是来自真实客户端的访问。</p><h3 id="反向代理" tabindex="-1"><a class="header-anchor" href="#反向代理" aria-hidden="true">#</a> 反向代理</h3><blockquote><p><strong>反向代理</strong>（Reverse Proxy）方式是指以代理服务器来接受internet上的连接请求，然后将请求转发给内部网络上的服务器，并将从服务器上得到的结果返回给internet上请求连接的客户端，此时代理服务器对外就表现为一个反向代理服务器。</p></blockquote><p><strong>反向代理</strong>是为服务端服务的，反向代理可以帮助服务器接收来自客户端的请求，帮助服务器做请求转发，负载均衡等。</p><p><strong>反向代理</strong>对服务端是透明的，对我们是非透明的，即我们并不知道自己访问的是代理服务器，而服务器知道反向代理在为他服务。</p><h3 id="nginx应用场景" tabindex="-1"><a class="header-anchor" href="#nginx应用场景" aria-hidden="true">#</a> Nginx应用场景</h3><p>1、 <strong>http服务器</strong>。Nginx是一个http服务可以独立提供http服务。可以做网页静态服务器。</p><p>2、 <strong>虚拟主机。可以实现在一台服务器虚拟出多个网站。例如个人网站使用的虚拟主机。</strong></p><ul><li>基于端口的，不同的端口</li><li>基于域名的，不同域名</li></ul><p>3、 <strong>反向代理，负载均衡</strong>。当网站的访问量达到一定程度后，单台服务器不能满足用户的请求时，需要用多台服务器集群可以使用nginx做反向代理。并且多台服务器可以平均分担负载，不会因为某台服务器负载高宕机而某台服务器闲置的情况。</p>',17);function b(f,m){const t=o("ExternalLinkIcon");return a(),s("div",null,[p,d,n("p",null,[l,e(" (engine x) 是一个高性能的"),n("a",x,[e("HTTP"),r(t)]),e("和"),n("a",_,[e("反向代理"),r(t)]),e("web服务器。")]),u])}const N=i(h,[["render",b],["__file","nginxchushi.html.vue"]]);export{N as default};
