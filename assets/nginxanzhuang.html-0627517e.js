import{_ as s,r,o as d,c as o,e as n,f as e,b as a,d as g}from"./app-e09b6429.js";const l="/orangewind/images/nginx/nginxDownload.png",t="/orangewind/images/nginx/nginxDownload1.png",c="/orangewind/images/nginx/nginxDownload2.png",p="/orangewind/images/nginx/nginxDownload3.png",x="/orangewind/images/nginx/nginxInstall.png",h="/orangewind/images/nginx/nginxInstall1.png",m="/orangewind/images/nginx/nginxInstall2.png",u="/orangewind/images/nginx/nginxInstall3.png",_="/orangewind/images/nginx/nginxInstall5.png",v="/orangewind/images/nginx/nginxInstall4.png",b="/orangewind/images/nginx/nginxInstall6.png",f={},w=n("h2",{id:"本地安装",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#本地安装","aria-hidden":"true"},"#"),e(" 本地安装")],-1),k=n("p",null,"windows本地安装nginx，步骤如下:",-1),I=n("h3",{id:"下载nginx",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#下载nginx","aria-hidden":"true"},"#"),e(" 下载nginx")],-1),q={href:"http://nginx.org/en/download.html",target:"_blank",rel:"noopener noreferrer"},N={href:"http://nginx.org/download/nginx-1.24.0.zip",target:"_blank",rel:"noopener noreferrer"},D={href:"http://nginx.org/download/nginx-1.24.0.zip.asc",target:"_blank",rel:"noopener noreferrer"},z=g('<p><img src="'+l+'" alt=""></p><p>解压后得到以下Nginx根目录</p><p><img src="'+t+'" alt=""></p><h3 id="启动nginx" tabindex="-1"><a class="header-anchor" href="#启动nginx" aria-hidden="true">#</a> 启动nginx</h3><p>1.点击根目录中的nginx.exe文件启动nginx，系统会闪过一个命令控制台然后自动关闭</p><p><img src="'+c+`" alt=""></p><p>2.在导航栏里输入cmd打开命令后，再命令中输入：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>nginx
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>启动nginx后，在任务管理器里查看：</p><p><img src="`+p+`" alt=""></p><p>说明开启成功，在浏览器中打开127.0.0.1或localhost就会显示nginx欢迎页说明运行成功</p><h2 id="docker安装" tabindex="-1"><a class="header-anchor" href="#docker安装" aria-hidden="true">#</a> Docker安装</h2><h3 id="拉取nginx镜像" tabindex="-1"><a class="header-anchor" href="#拉取nginx镜像" aria-hidden="true">#</a> 拉取nginx镜像</h3><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">docker</span> pull nginx
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p><img src="`+x+'" alt=""></p><p>检查镜像是否获取成功，现在就是拉取到的最新版本的 <code>nginx</code> 镜像</p><p><img src="'+h+'" alt=""></p><h3 id="启动一个nginx容器" tabindex="-1"><a class="header-anchor" href="#启动一个nginx容器" aria-hidden="true">#</a> 启动一个nginx容器</h3><p>通过之前安装的nginx镜像创建一个nginx_server的新容器</p><blockquote><p>创建nginx_server容器</p><p>docker create --name nginx_server nginx</p></blockquote><p><img src="'+m+'" alt=""></p><blockquote><p>启动nginx_server容器</p><p>docker start nginx_server</p></blockquote><p><img src="'+u+'" alt=""></p><p>加入部署项目以后，运行如下(端口号：80)：</p><p><img src="'+_+'" alt=""></p><blockquote><p>或者运行nginx_server容器</p><p>docker run --name nginx-server -p 8888:80 -v /home/www -d <strong>nginx</strong></p></blockquote><h4 id="命令参数" tabindex="-1"><a class="header-anchor" href="#命令参数" aria-hidden="true">#</a> 命令参数</h4><ul><li><code>--name</code>: 容器名称</li><li><code>-p</code>: 将系统的80端口映射到容器的80端口</li><li><code>-v</code>: <code>/home/www</code> 系统外部的代码目录，映射到容器内自定义目录 <code>www</code></li><li><code>-d</code>: 设置容器后台运行</li></ul><p><img src="'+v+'" alt=""></p><p>未加入部署项目，运行如下（端口号：8888）</p><p><img src="'+b+`" alt=""></p><p>这就说明nginx服务已经被启动了。</p><h3 id="常用命令" tabindex="-1"><a class="header-anchor" href="#常用命令" aria-hidden="true">#</a> 常用命令</h3><ul><li><p>启动nginx服务的命令</p><div class="language-nginx line-numbers-mode" data-ext="nginx"><pre class="language-nginx"><code>root@657b97820d88:/# nginx
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li><li><p>检查配置的命令，一般用于在修改配置后检查下配置是否合法</p><div class="language-nginx line-numbers-mode" data-ext="nginx"><pre class="language-nginx"><code>root@657b97820d88:/# nginx -t
nginx: the configuration file /etc/nginx/nginx.conf syntax is ok
nginx: configuration file /etc/nginx/nginx.conf test is successful
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>重启命令，修改完配置后需要重启nginx服务</p><div class="language-nginx line-numbers-mode" data-ext="nginx"><pre class="language-nginx"><code>root@657b97820d88:/# nginx -s reload
2023/09/24 08:59:39 [notice] 49#49: signal process started
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>停止nginx服务</p><div class="language-nginx line-numbers-mode" data-ext="nginx"><pre class="language-nginx"><code>root@657b97820d88:/# nginx -s stop
2023/09/24 09:00:33 [notice] 58#58: signal process started
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>压缩<code>js</code>/<code>css</code>)</p></li></ul>`,34);function V(B,E){const i=r("ExternalLinkIcon");return d(),o("div",null,[w,k,I,n("p",null,[e("请先到"),n("a",q,[e("nginx"),a(i)]),e("下载Nginx稳定版，这里我下载了"),n("a",N,[e(" nginx/Windows-1.24.0"),a(i)]),e(),n("a",D,[e("pgp"),a(i)])]),z])}const j=s(f,[["render",V],["__file","nginxanzhuang.html.vue"]]);export{j as default};
